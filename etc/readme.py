import click
import toml

from etc import ROOT
from etc.lint.rust import list_cargo_toml_files


@click.group()
def readme() -> None:
    """Commands related to readme maintainance"""


_BEGIN = (
    "<!-- BEGIN THIS SECTION IS AUTOGENERATED BY ./swanky readme gen-crate-list -->"
)
_END = "<!-- END THIS SECTION IS AUTOGENERATED BY ./swanky readme gen-crate-list -->"


@readme.command()
@click.option(
    "--check",
    is_flag=True,
    default=False,
    help="Don't change any files, just fail if files would be changed",
)
@click.pass_context
def gen_crate_list(ctx: click.Context, check: bool) -> None:
    errors = []
    descriptions = []
    for cargo_toml in list_cargo_toml_files():
        disp_path = cargo_toml.relative_to(ROOT)
        manifest = toml.loads(cargo_toml.read_text())
        package = manifest.get("package", dict())
        if "name" not in package:
            errors.append(f"{disp_path} is missing a 'name' in the 'package' section")
        elif package.get("description", "").strip() == "":
            errors.append(
                f"{disp_path} is missing a 'description' in the 'package' section"
            )
        else:
            descriptions.append((package["name"], package["description"]))
    if len(errors) > 0:
        raise click.ClickException(
            "The following errors were encountered:\n" + "\n".join(errors)
        )
    descriptions.sort()
    descriptions_md = "\n".join(
        f"- **`{name}`**: {desc}" for name, desc in descriptions
    )
    readme = ROOT / "README.md"
    prelude, post_prelude = readme.read_text().split(_BEGIN)
    existing_descriptions, suffix = post_prelude.split(_END)
    existing_descriptions = existing_descriptions.strip()
    if check:
        if existing_descriptions != descriptions_md:
            raise click.ClickException(
                "The crate list in README.md isn't up to date. Run ./swanky readme gen-crate-list"
            )
    else:
        readme.write_text(
            prelude + _BEGIN + "\n" + descriptions_md + "\n" + _END + suffix
        )
