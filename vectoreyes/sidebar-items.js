window.SIDEBAR_ITEMS = {"constant":[["VECTOR_BACKEND","The backend that is used to evaluate vector operations."]],"enum":[["MicroArchitecture",""],["VectorBackend",""]],"mod":[["array_utils","Perform manually unrolled operations on arrays."]],"struct":[["Aes128",""],["Aes128EncryptOnly",""],["Aes256",""],["Aes256EncryptOnly",""],["I16x16","`[i16; 16]` as a vector."],["I16x8","`[i16; 8]` as a vector."],["I32x4","`[i32; 4]` as a vector."],["I32x8","`[i32; 8]` as a vector."],["I64x2","`[i64; 2]` as a vector."],["I64x4","`[i64; 4]` as a vector."],["I8x16","`[i8; 16]` as a vector."],["I8x32","`[i8; 32]` as a vector."],["U16x16","`[u16; 16]` as a vector."],["U16x8","`[u16; 8]` as a vector."],["U32x4","`[u32; 4]` as a vector."],["U32x8","`[u32; 8]` as a vector."],["U64x2","`[u64; 2]` as a vector."],["U64x4","`[u64; 4]` as a vector."],["U8x16","`[u8; 16]` as a vector."],["U8x32","`[u8; 32]` as a vector."]],"trait":[["AesBlockCipher",""],["AesBlockCipherDecrypt",""],["ExtendingCast","Lossily cast a vector by {zero,sign}-extending its values."],["HasVector","A utility trait you probably wonâ€™t need to use. See [Simd]."],["Scalar","A scalar that can live in the lane of a vector."],["SimdBase","A vector equivalent to `[T; Self::Lanes]`."],["SimdBase32","A vector containing 32-bit values."],["SimdBase4x","A vector containing 4 lanes."],["SimdBase4x64","A vector containing 4 64-bit values."],["SimdBase64","A vector containing 64-bit values."],["SimdBase8","A vector containing 8-bit values."],["SimdBase8x","A vector containing 8 lanes."],["SimdBaseGatherable",""]],"type":[["Simd","An alternative way of naming SIMD types."]]};